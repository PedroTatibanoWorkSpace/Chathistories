import { Message } from 'src/modules/messages/domain/entity/message.entity';
import { MessageOrmEntity } from '../orm/message-orm.entity';

export class MessageMapper {
  static toOrmEntity(domainMessage: Message): MessageOrmEntity {
    return {
      id: domainMessage.id,
      chatId: domainMessage.chatId,
      phoneId: domainMessage.phoneId,
      accountId: domainMessage.accountId,
      authorId: domainMessage.authorId || null,
      externalId: domainMessage.externalId,
      chatExternalId: domainMessage.chatExternalId,
      phoneExternalId: domainMessage.phoneExternalId,
      accountExternalId: domainMessage.accountExternalId,
      authorExternalId: domainMessage.authorExternalId || null,
      waMessageId: domainMessage.waMessageId,
      waSenderId: domainMessage.waSenderId,
      senderName: domainMessage.senderName || null,
      status: domainMessage.status,
      isApproved: domainMessage.isApproved,
      type: domainMessage.type,
      isOut: domainMessage.isOut,
      ack: domainMessage.ack,
      isTemplate: domainMessage.isTemplate,
      optionsOpen: domainMessage.optionsOpen,
      deleted: domainMessage.deleted,
      hide: domainMessage.hide,
      processor: domainMessage.processor,
      isForwarded: domainMessage.isForwarded,
      fromDevice: domainMessage.fromDevice,
      text: domainMessage.text || null,
      quotes: domainMessage.quotes || null,
      quotesType: domainMessage.quotesType || null,
      quotesWaMessageId: domainMessage.quotesWaMessageId || null,
      quotesThumb: domainMessage.quotesThumb || null,
      file: domainMessage.file || null,
      products: domainMessage.products || null,
      vcardContacts: domainMessage.vcardContacts || null,
      metadata: domainMessage.metadata || null,
      botResponse: domainMessage.botResponse || null,
      watsonResponse: domainMessage.watsonResponse || null,
      errorDetails: domainMessage.errorDetails || null,
      edits: domainMessage.edits || null,
      createdAt: domainMessage.createdAt,
      timestamp: domainMessage.timestamp,
      sendDate: domainMessage.sendDate || null,
    };
  }

  static toDomainEntity(ormMessage: MessageOrmEntity): Message {
    return Message.reconstruct({
      id: ormMessage.id,
      chatId: ormMessage.chatId,
      phoneId: ormMessage.phoneId,
      accountId: ormMessage.accountId,
      authorId: ormMessage.authorId || undefined,
      externalId: ormMessage.externalId,
      chatExternalId: ormMessage.chatExternalId,
      phoneExternalId: ormMessage.phoneExternalId,
      accountExternalId: ormMessage.accountExternalId,
      authorExternalId: ormMessage.authorExternalId || undefined,
      waMessageId: ormMessage.waMessageId,
      waSenderId: ormMessage.waSenderId,
      senderName: ormMessage.senderName || undefined,
      status: ormMessage.status,
      isApproved: ormMessage.isApproved,
      type: ormMessage.type,
      isOut: ormMessage.isOut,
      ack: ormMessage.ack,
      isTemplate: ormMessage.isTemplate,
      optionsOpen: ormMessage.optionsOpen,
      deleted: ormMessage.deleted,
      hide: ormMessage.hide,
      processor: ormMessage.processor,
      isForwarded: ormMessage.isForwarded,
      fromDevice: ormMessage.fromDevice,
      text: ormMessage.text || undefined,
      quotes: ormMessage.quotes || undefined,
      quotesType: ormMessage.quotesType || undefined,
      quotesWaMessageId: ormMessage.quotesWaMessageId || undefined,
      quotesThumb: ormMessage.quotesThumb || undefined,
      file: ormMessage.file || undefined,
      products: ormMessage.products || undefined,
      vcardContacts: ormMessage.vcardContacts || undefined,
      metadata: ormMessage.metadata || undefined,
      botResponse: ormMessage.botResponse || undefined,
      watsonResponse: ormMessage.watsonResponse || undefined,
      errorDetails: ormMessage.errorDetails || undefined,
      edits: ormMessage.edits || undefined,
      createdAt: ormMessage.createdAt,
      timestamp: ormMessage.timestamp,
      sendDate: ormMessage.sendDate || undefined,
    });
  }
}
